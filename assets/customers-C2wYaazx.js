import{j as C,r as U,P as i,Q as f,S as u,T as y,U as m,V as h,W as w,X as F}from"./index-BSk1f9nz.js";import{g as v}from"./categories-CVnRp0cG.js";var s=[];for(var p=0;p<256;++p)s.push((p+256).toString(16).slice(1));function I(e,r=0){return(s[e[r+0]]+s[e[r+1]]+s[e[r+2]]+s[e[r+3]]+"-"+s[e[r+4]]+s[e[r+5]]+"-"+s[e[r+6]]+s[e[r+7]]+"-"+s[e[r+8]]+s[e[r+9]]+"-"+s[e[r+10]]+s[e[r+11]]+s[e[r+12]]+s[e[r+13]]+s[e[r+14]]+s[e[r+15]]).toLowerCase()}var d,R=new Uint8Array(16);function S(){if(!d&&(d=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!d))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return d(R)}var B=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const x={randomUUID:B};function E(e,r,D){if(x.randomUUID&&!r&&!e)return x.randomUUID();e=e||{};var c=e.random||(e.rng||S)();return c[6]=c[6]&15|64,c[8]=c[8]&63|128,I(c)}const l=()=>E(),$=C("customers",()=>{const e=U(null);return{createCustomer:async a=>{const o=a;o.photo&&o.photo instanceof File&&await i(o.photo,`user_photos/${l()}`).then(t=>{o.photo=t}),o.experience=await Promise.all(o.experience.map(async t=>(t.logo&&t.logo instanceof File&&(t.logo=await i(t.logo,`experience_logos/${l()}`)),t)));try{const t=await f(u,o);return await y(t,{id:t.id}),{status:1}}catch(t){return console.log(t),{status:0}}},getCustomersByFilters:async(a=1,o)=>{try{const{documents:t,totalPages:n}=await v(u,e,a,o);return console.log(t),{documents:t,totalPages:n}}catch(t){return console.error("Error fetching documents: ",t),{documents:[],totalPages:0}}},deleteDocument:async a=>{try{const o=m(u,a),t=await h(o);if(t.exists()){const n=t.data();n.photo&&await w(n.photo);for(const g of n.experience)g.logo&&await w(g.logo)}return await F(o),{status:1}}catch(o){return console.error("Error deleting document: ",o),{status:0}}},getCustomerById:async a=>{try{const o=m(u,a),t=await h(o);return t.exists()?{status:1,document:{...t.data()}}:{status:0,document:null}}catch(o){return console.error("Error fetching document: ",o),{status:0,document:null}}},updateCustomer:async(a,o)=>{const t=a;t.photo&&t.photo instanceof File&&await i(t.photo,`user_photos/${l()}`).then(n=>{t.photo=n}),t.experience=await Promise.all(t.experience.map(async n=>(n.logo&&n.logo instanceof File&&(n.logo=await i(n.logo,`experience_logos/${l()}`)),n)));try{const n=m(u,o);return await y(n,{...a}),{status:1}}catch(n){return console.log("Error updating document:",n),{status:0}}}}});export{l as g,$ as u};
